[build-system]
requires      = [ "setuptools>=64", "wheel" ]
build-backend = "setuptools.build_meta"

[project]
name = "iblrig"
description = "The International Brain Laboratory's decision making task"
dynamic = [ "readme", "version" ]
keywords = [ "IBL", "neuro-science" ]
requires-python = "~=3.10"
license = { file = "LICENSE" }
dependencies = [
    "ONE-api >= 2.7.0",
    "PyQt5",
    "PyQtWebEngine",
    "PyYAML",
    "colorlog",
    "graphviz",
    "iblbpod@git+https://github.com/int-brain-lab/iblbpod.git",
    "ibllib@git+https://github.com/int-brain-lab/ibllib.git",
    "iblpybpod@git+https://github.com/int-brain-lab/iblpybpod.git@no-gui",
    "iblscripts@git+https://github.com/int-brain-lab/iblscripts.git",
    "iblutil >= 1.7.4",
    "ipython",
    "numpy",
    "packaging",
    "pandas",
    "project_extraction@git+https://github.com/int-brain-lab/project_extraction.git",
    "pydantic",
    "pyqtgraph",
    "python-osc",
    "pywin32; sys_platform == 'win32'",
    "scipy",
    "sounddevice",
    "tk",
]

[project.optional-dependencies]
DEV = [
    "coverage[toml]",
    "flake8",
    "mypy",
    "myst-parser",
    "pre-commit",
    "pylint",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx",
    "sphinx-autobuild",
    "sphinx_lesson",
    "sphinx_rtd_theme",
    "types-PyYAML",
    "types-requests",
]

[project.scripts]
viewsession         = "iblrig.commands:viewsession"
transfer_data       = "iblrig.commands:transfer_data_cli"
transfer_video_data = "iblrig.commands:transfer_video_data_cli"
transfer_ephys_data = "iblrig.commands:transfer_ephys_data_cli"
flush               = "iblrig.commands:flush"
remove-old-sessions = "iblrig.commands:remove_local_sessions"
iblrig              = "iblrig.gui.wizard:main"
upgrade_iblrig      = "iblrig.upgrade_iblrig:upgrade"
install_spinnaker   = "iblrig.video:install_spinnaker"
install_pyspin      = "iblrig.video:install_pyspin"
start_video_session = "iblrig.video:prepare_video_session_cmd"
start_ephys_session = "iblrig.ephys:prepare_ephys_session_cmd"
convert_uis         = "iblrig.gui.tools:convert_uis"

[tool.setuptools.dynamic]
readme  = { file = "README.md", content-type = "text/markdown" }
version = { attr = "iblrig.__version__" }

[tool.setuptools.packages]
find = {}

[tool.mypy]
files                  = [ "iblrig/**/*.py", "iblrig_tasks/**/*.py" ]
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts    = "-ra --cov-report xml --cov=iblrig --cov=iblrig_tasks --tb=native"
minversion = "6.0"
testpaths  = [ "iblrig/test", "iblrig/test/tasks" ]

[tool.ruff]
ignore = [
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
]
exclude = [
    ".mypy_cache",
    "dist",
    "docs",
    "iblrig/gui/*_rc.py",
    "iblrig/gui/ui_*.py",
    "venv",
]
indent-width = 4
line-length = 130
target-version = "py310"

[tool.ruff.lint]
select = [
    "B",   # flake8-bugbear
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "PL",  # pylint
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
]
ignore = [
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison, consider replacing with a constant variable
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
known-first-party = [ "ibl*", "one*", "pybpod*" ]
